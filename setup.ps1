# Script d'installation PowerShell pour projet Django REST Framework - Facturation d'eau
# Compatible Windows 11 avec Python 3.12
# ‚ö†Ô∏è Sous Git Bash/WSL, utiliser setup.sh au lieu de ce script

param(
    [switch]$Force
)

# Configuration des couleurs et messages
$ErrorActionPreference = "Stop"

Write-Host "üöÄ D√©marrage de l'installation du projet Django REST Framework..." -ForegroundColor Green
Write-Host "üìã Configuration: Windows 11, Python 3.12, pip" -ForegroundColor Cyan

# V√©rifier la version de Python
Write-Host "üîç V√©rification de la version Python..." -ForegroundColor Yellow
try {
    $pythonVersion = python --version 2>&1
    Write-Host "‚úÖ $pythonVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Python non trouv√©! Veuillez installer Python 3.12" -ForegroundColor Red
    exit 1
}

# V√©rifier si pip est install√©
Write-Host "üîç V√©rification de pip..." -ForegroundColor Yellow
try {
    $pipVersion = pip --version 2>&1
    Write-Host "‚úÖ $pipVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå pip non trouv√©!" -ForegroundColor Red
    exit 1
}

# √âtape 1: Cr√©er l'environnement virtuel
Write-Host "üì¶ Cr√©ation de l'environnement virtuel 'venv'..." -ForegroundColor Yellow
if (Test-Path "venv") {
    if ($Force) {
        Write-Host "‚ö†Ô∏è  Suppression de l'environnement virtuel existant..." -ForegroundColor Yellow
        Remove-Item -Recurse -Force "venv"
    } else {
        Write-Host "‚ö†Ô∏è  L'environnement virtuel existe d√©j√†. Utilisez -Force pour le recr√©er." -ForegroundColor Yellow
        $response = Read-Host "Continuer avec l'environnement existant? (y/N)"
        if ($response -ne "y" -and $response -ne "Y") {
            exit 0
        }
    }
}

python -m venv venv

# √âtape 2: Activer l'environnement virtuel
Write-Host "üîÑ Activation de l'environnement virtuel..." -ForegroundColor Yellow
$activateScript = ".\venv\Scripts\Activate.ps1"
if (Test-Path $activateScript) {
    & $activateScript
    Write-Host "‚úÖ Environnement virtuel activ√©" -ForegroundColor Green
} else {
    Write-Host "‚ùå Impossible d'activer l'environnement virtuel" -ForegroundColor Red
    exit 1
}

# √âtape 3: Mise √† jour de pip
Write-Host "‚¨ÜÔ∏è  Mise √† jour de pip..." -ForegroundColor Yellow
python -m pip install --upgrade pip

# √âtape 4: Installation des d√©pendances Python
Write-Host "üìö Installation des d√©pendances..." -ForegroundColor Yellow

# V√©rifier que les fichiers requirements existent
if (-not (Test-Path "requirements.txt")) {
    Write-Host "‚ùå Erreur: requirements.txt non trouv√©!" -ForegroundColor Red
    exit 1
}

if (-not (Test-Path "requirements-dev.txt")) {
    Write-Host "‚ùå Erreur: requirements-dev.txt non trouv√©!" -ForegroundColor Red
    exit 1
}

# Installer les d√©pendances de production
Write-Host "  - Installation des d√©pendances de production..." -ForegroundColor White
pip install -r requirements.txt

# Installer les d√©pendances de d√©veloppement
Write-Host "  - Installation des d√©pendances de d√©veloppement..." -ForegroundColor White
pip install -r requirements-dev.txt

# √âtape 5: V√©rification finale
Write-Host "üîç V√©rification finale des installations principales..." -ForegroundColor Yellow
try {
    $djangoVersion = python -c "import django; print(django.get_version())" 2>&1
    Write-Host "  - Django: $djangoVersion" -ForegroundColor Green
} catch {
    Write-Host "  - Django: ‚ùå Erreur" -ForegroundColor Red
}

try {
    $drfVersion = python -c "import rest_framework; print(rest_framework.VERSION)" 2>&1
    Write-Host "  - DRF: $drfVersion" -ForegroundColor Green
} catch {
    Write-Host "  - DRF: ‚ùå Erreur" -ForegroundColor Red
}

try {
    python -c "import psycopg2; print('‚úÖ Install√©')" 2>&1 | Out-Null
    Write-Host "  - PostgreSQL (psycopg2): ‚úÖ Install√©" -ForegroundColor Green
} catch {
    Write-Host "  - PostgreSQL (psycopg2): ‚ùå Erreur" -ForegroundColor Red
}

Write-Host ""
Write-Host "üéâ Installation termin√©e!" -ForegroundColor Green
Write-Host ""
Write-Host "üìù Prochaines √©tapes:" -ForegroundColor Cyan
Write-Host "  1. Activez l'environnement virtuel:" -ForegroundColor White
Write-Host "     .\venv\Scripts\Activate.ps1" -ForegroundColor White
Write-Host ""
Write-Host "  2. Cr√©ez votre projet Django:" -ForegroundColor White
Write-Host "     django-admin startproject waterbill ." -ForegroundColor White
Write-Host ""
Write-Host "  3. Configurez votre base de donn√©es PostgreSQL dans settings.py" -ForegroundColor White
Write-Host ""
Write-Host "  4. Lancez les migrations:" -ForegroundColor White
Write-Host "     python manage.py migrate" -ForegroundColor White
Write-Host ""
Write-Host "  5. Cr√©ez un superutilisateur:" -ForegroundColor White
Write-Host "     python manage.py createsuperuser" -ForegroundColor White
Write-Host ""
Write-Host "üîß Pour d√©sactiver l'environnement virtuel: deactivate" -ForegroundColor Cyan

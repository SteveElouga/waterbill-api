#!/usr/bin/env python3
"""
Script pour cr√©er le fichier .env bas√© sur env.example
"""

import os
import shutil


def create_env_file():
    """Cr√©e le fichier .env √† partir de env.example"""

    # V√©rifier si .env existe d√©j√†
    if os.path.exists('.env'):
        print("‚ö†Ô∏è  Le fichier .env existe d√©j√†.")
        response = input("Voulez-vous le remplacer? (y/N): ")
        if response.lower() != 'y':
            print("‚ùå Annul√©.")
            return

    # Copier env.example vers .env
    try:
        shutil.copy('env.example', '.env')
        print("‚úÖ Fichier .env cr√©√© avec succ√®s!")
        print("üìù N'oubliez pas de personnaliser les valeurs dans .env")
        print("üîí Le fichier .env est dans .gitignore pour des raisons de s√©curit√©")

        # Afficher les variables importantes √† personnaliser
        print("\nüéØ Variables importantes √† personnaliser:")
        print("  - SECRET_KEY: G√©n√©rez une cl√© secr√®te unique")
        print("  - POSTGRES_PASSWORD: Mot de passe de la base de donn√©es")
        print("  - DJANGO_SUPERUSER_PASSWORD: Mot de passe de l'admin")
        print("  - PGADMIN_PASSWORD: Mot de passe de pgAdmin")
        print("  - TWILIO_*: Variables pour les SMS (optionnel)")

    except FileNotFoundError:
        print("‚ùå Erreur: Le fichier env.example n'existe pas.")
    except Exception as e:
        print(f"‚ùå Erreur lors de la cr√©ation du fichier .env: {e}")


if __name__ == "__main__":
    create_env_file()

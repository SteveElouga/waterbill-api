#!/usr/bin/env bash
set -e

# Attendre que la DB r√©ponde (utilise Python pour √©viter d‚Äôinstaller netcat)
echo "‚è≥ Attente de la base de donn√©es..."
python - <<'PYCODE'
import os, time, sys
import psycopg
from urllib.parse import urlparse

url = os.environ.get("DATABASE_URL")
if not url:
    print("DATABASE_URL non d√©fini", file=sys.stderr)
    sys.exit(1)

for i in range(30):
    try:
        with psycopg.connect(url, connect_timeout=3) as conn:
            with conn.cursor() as cur:
                cur.execute("SELECT 1;")
                print("‚úÖ Base de donn√©es pr√™te.")
                sys.exit(0)
    except Exception as e:
        print(f"DB non pr√™te ({e}), retry {i+1}/30...")
        time.sleep(2)

print("‚ùå √âchec de connexion √† la DB apr√®s 30 essais.", file=sys.stderr)
sys.exit(1)
PYCODE

# Cr√©ation du dossier logs
echo "üìÅ Cr√©ation du dossier logs..."
mkdir -p /app/logs

# Migrations
echo "‚öôÔ∏è  Django migrate..."
python manage.py migrate --noinput

# Collect static (si whitenoise)
echo "üì¶ Collectstatic..."
python manage.py collectstatic --noinput 2>/dev/null || echo "‚ö†Ô∏è  Collectstatic ignor√© (pas de fichiers statiques)"

# Cr√©ation auto du superuser si variables pr√©sentes (optionnel)
if [[ -n "$DJANGO_SUPERUSER_USERNAME" && -n "$DJANGO_SUPERUSER_EMAIL" && -n "$DJANGO_SUPERUSER_PASSWORD" ]]; then
  echo "üë§ Cr√©ation du superuser..."
  # Utiliser le num√©ro de t√©l√©phone comme identifiant pour notre mod√®le User personnalis√©
  python manage.py createsuperuser \
    --username "$DJANGO_SUPERUSER_USERNAME" \
    --email "$DJANGO_SUPERUSER_EMAIL" \
    --phone "$DJANGO_SUPERUSER_USERNAME" \
    --noinput || true
fi

# Lancement serveur (Gunicorn en prod, runserver en dev)
if [[ "$DJANGO_RUNSERVER" == "1" ]]; then
  echo "üöÄ Lancement devserver (mode d√©veloppement)..."
  exec python manage.py runserver 0.0.0.0:8000
else
  echo "üöÄ Lancement gunicorn (mode production)..."
  exec gunicorn waterbill.wsgi:application --bind 0.0.0.0:8000 --workers 3 --timeout 120
fi
